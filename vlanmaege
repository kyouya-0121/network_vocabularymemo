Add-Type -AssemblyName System.Windows.Forms

# VLAN ID 入力
$VLANid = [Microsoft.VisualBasic.Interaction]::InputBox("抽出したい VLAN ID を入力してください", "VLAN抽出")
If ([string]::IsNullOrWhiteSpace($VLANid)) { exit }

# CSV フォルダ選択
$folderDialog = New-Object System.Windows.Forms.FolderBrowserDialog
$folderDialog.Description = "抽出対象の CSV フォルダを選択してください"
$folderDialog.ShowNewFolderButton = $false
If ($folderDialog.ShowDialog() -ne [System.Windows.Forms.DialogResult]::OK) { exit }
$csvDir = $folderDialog.SelectedPath

# 出力先 CSV
$outputCsv = Join-Path $csvDir "VLAN_${VLANid}_抽出.csv"

# 結果配列
$resultList = @()

Get-ChildItem -Path $csvDir -Filter *.csv -File | ForEach-Object {
    $csvFile = $_.FullName
    $csvName = $_.BaseName
    $shortName = $csvName.Substring(0, [Math]::Min(16, $csvName.Length))

    $lines = Import-Csv -Path $csvFile

    # 3カラム目で VLAN フィルター
    $filtered = $lines | Where-Object { $_.PSObject.Properties[2].Value -eq $VLANid }

    foreach ($row in $filtered) {
        # 出力用オブジェクト作成
        $obj = [PSCustomObject]@{ Hostname = $shortName }

        # B列以降に元の行を追加
        foreach ($prop in $row.PSObject.Properties) {
            $obj | Add-Member -NotePropertyName $prop.Name -NotePropertyValue $prop.Value
        }

        $resultList += $obj
    }
}

# 出力
if ($resultList.Count -gt 0) {
    $resultList | Export-Csv -Path $outputCsv -NoTypeInformation -Encoding UTF8
    Write-Host "抽出結果を出力: $outputCsv"
} else {
    Write-Host "指定 VLAN に一致する行は見つかりませんでした。"
}
